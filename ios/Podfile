# ios/Podfile

platform :ios, '12.0'
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug'   => :debug,
  'Profile' => :release,
  'Release' => :release,
}

# Locate the Generated.xcconfig so Flutter can find its engine artifacts.
def flutter_root
  generated_xcode_build_settings_path = File.expand_path(
    File.join('..', 'Flutter', 'Generated.xcconfig'),
    __FILE__,
  )
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. Run 'flutter pub get' first."
  end
  File.expand_path(File.join('..', 'flutter', 'bin', 'cache', 'artifacts', 'engine', 'ios'), __FILE__)
end

# Load Flutter’s CocoaPods helper, which defines flutter_install_all_ios_pods
load File.join(File.dirname(__FILE__), 'Flutter', 'podhelper.rb')

target 'Runner' do
  # ← remove use_frameworks! and use_modular_headers! here

  # Install all Flutter pods (including sqflite, path_provider, etc.)
  flutter_install_all_ios_pods(File.dirname(File.realpath(__FILE__)))

  # If you have unit tests:
  target 'RunnerTests' do
    inherit! :search_paths
  end
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
  end
end
